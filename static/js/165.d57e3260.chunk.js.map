{"version":3,"file":"static/js/165.d57e3260.chunk.js","mappings":"6NACe,SAAS,EAAyBA,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,GAAS,EAAAC,EAAA,GAA6BL,EAAQC,GAElD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GACpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,CCdA,MAA8B,mCAA9B,EAA6E,iCAA7E,EAAsH,6BAAtH,EAA2J,6B,gCCCrJU,EAAc,SAACC,GACjB,IAAMC,EAAWD,EAAME,KAAKC,SAAWH,EAAME,KAAKE,MAClD,OACI,iBAAKC,UAAWC,EAAqB,KAAOL,EAAWK,EAAe,IAAI,WACtE,gBAAKD,UAAWC,EAAe,KAAOL,EAAWK,EAAe,IAAI,SAC/DN,EAAMO,WAEVN,IAAY,gBAAKI,UAAWC,EAAiB,SAAEN,EAAME,KAAKE,UAGvE,EAEaI,EAAQ,SAACR,GACYA,EAAvBE,KAAP,IAAgBO,EAAU,EAAIT,EAAK,GAC5BU,EAAwBD,EAAxBC,MAAUC,EAAU,EAAIF,EAAU,GACzC,OACI,UAACV,GAAW,kBAAKC,GAAK,cAAE,KAAC,oCAAWW,GAAgBD,IAAQ,OAEpE,E,8BCwCME,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAM,aADaD,EA/BL,SAACb,GACf,IAGkBe,EAHZC,EAAW,SAAAC,GAAI,OAAI,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,OAAqBC,EAAYF,CAAI,CAAC,EACnFG,EAAgBJ,EAAS,mBACzBK,EAAmBL,EAAS,sBAG5BM,GAFYP,EAEY,GAFL,SAAAG,GAAK,OAC1BA,GAASA,EAAMxB,OAASqB,EAAG,kBAAcA,EAAG,4BAAwBI,CAAS,GAEjF,OACI,kBAAMI,SAAUvB,EAAMwB,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,KAAM,OAAQC,YAAa,QAASC,KAAM,QAC1CC,SAAU,CAACT,GACXU,UAAWtB,OAEtB,0BACI,SAACiB,EAAA,EAAK,CAACC,KAAM,WAAYC,YAAa,WAAYC,KAAM,WACjDC,SAAU,CAACR,EAAkBC,GAC7BQ,UAAWtB,OAEtB,4BACI,SAACiB,EAAA,EAAK,CAACC,KAAM,WAAYE,KAAM,aAAcE,UAAWtB,KACxD,0BAAM,mBAGNR,EAAMI,QAAS,gBAAKC,UAAWC,EAAiB,SAAEN,EAAMI,SAE5D,4BAAQ,YAGpB,IAYA,GAAe2B,EAAAA,EAAAA,KANS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAME,aAAaD,WAEvC,GAEwC,CAACE,MAAAA,EAAAA,GAAOC,OAAAA,EAAAA,IAAhD,EA9Dc,SAACpC,GAKX,OACI,8BAEQA,EAAMiC,YACA,SAAC,KAAQ,CAACI,GAAI,cACb,4BACK,wBAAI,WACJ,SAACzB,EAAc,CAACW,SAVvB,SAACe,GACdtC,EAAMmC,MAAMG,EAAWC,MAAOD,EAAWE,SAAUF,EAAWG,WAClE,QAeJ,G","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://react-it-camasutra/./src/components/FieldControls/FieldControls.module.css?33c0","components/FieldControls/FieldControls.jsx","components/Login/Login.jsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FieldControls_formControl__PgQPt\",\"errorText\":\"FieldControls_errorText__0auOr\",\"error\":\"FieldControls_error__G1B2l\",\"input\":\"FieldControls_input__t9ZtT\"};","import styles from \"./FieldControls.module.css\";\r\n\r\nconst CreateInput = (props) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div className={styles.input + \" \" + (hasError ? styles.error : \"\")}>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <div className={styles.errorText}>{props.meta.error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {meta, ...dataForTeg} = props\r\n    const {input, ...attributes} = dataForTeg\r\n    return (\r\n        <CreateInput {...props}> <input {...attributes} {...input}/> </CreateInput>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {meta, ...dataForTeg} = props\r\n    const {input, ...attributes} = dataForTeg\r\n    return (\r\n        <CreateInput {...props}> <textarea {...attributes} {...input}/> </CreateInput>\r\n    )\r\n}","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../FieldControls/FieldControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../Redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport styles from \"../FieldControls/FieldControls.module.css\"\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (dataSubmit) => {\r\n        props.login(dataSubmit.email, dataSubmit.password, dataSubmit.rememberMe)\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                props.isUserAuth\r\n                    ? <Navigate to={\"/profile\"}/>\r\n                    : (<div>\r\n                            <h1>Login</h1>\r\n                            <LoginReduxForm onSubmit={onSubmit}/>\r\n                        </div>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n    const required = text => value => (value || typeof value === 'number' ? undefined : text)\r\n    const requiredLogin = required(\"Enter the email\")\r\n    const requiredPassword = required(\"Enter the password\")\r\n    const maxLength = max => value =>\r\n        value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n    const maxLength50 = maxLength(50)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field type={\"text\"} placeholder={\"email\"} name={\"email\"}\r\n                       validate={[requiredLogin]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"password\"} placeholder={\"password\"} name={\"password\"}\r\n                       validate={[requiredPassword, maxLength50]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/>\r\n                <span>Remember me</span>\r\n            </div>\r\n            {\r\n                props.error && <div className={styles.errorText}>{props.error}</div>\r\n            }\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"loginForm\"\r\n})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isUserAuth: state.authUserData.isUserAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);"],"names":["source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","CreateInput","props","hasError","meta","touched","error","className","styles","children","Input","dataForTeg","input","attributes","LoginReduxForm","reduxForm","form","max","required","text","value","undefined","requiredLogin","requiredPassword","maxLength50","onSubmit","handleSubmit","Field","type","placeholder","name","validate","component","connect","state","isUserAuth","authUserData","login","logout","to","dataSubmit","email","password","rememberMe"],"sourceRoot":""}