{"version":3,"file":"static/js/197.6823a624.chunk.js","mappings":"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","sources":["webpack://react-it-camasutra/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-it-camasutra/./src/components/Dialogs/BlockWithDialogs/Dialog/Dialog.module.css?1acc","components/Dialogs/BlockWithDialogs/Dialog/Dialog.jsx","webpack://react-it-camasutra/./src/components/Dialogs/BlockWithDialogs/BlockWithDialogs.module.css?30aa","components/Dialogs/BlockWithDialogs/BlockWithDialogs.jsx","webpack://react-it-camasutra/./src/components/Dialogs/BlockWithMassages/BlockWithMassages.module.css?a89c","webpack://react-it-camasutra/./src/components/Dialogs/BlockWithMassages/Massages/Massages.module.css?08b9","webpack://react-it-camasutra/./src/components/Dialogs/BlockWithMassages/Massages/Massage/Massage.module.css?7948","components/Dialogs/BlockWithMassages/Massages/Massage/Massage.jsx","webpack://react-it-camasutra/./src/components/Dialogs/BlockWithMassages/Massages/BlockTyping/BlockTyping.module.css?b72e","components/Dialogs/BlockWithMassages/Massages/BlockTyping/BlockTyping.jsx","components/Dialogs/BlockWithMassages/Massages/BlockTyping/BlockTypingContainer.jsx","components/Dialogs/BlockWithMassages/Massages/Massages.jsx","components/Dialogs/BlockWithMassages/BlockWithMassages.jsx","components/Dialogs/Dialogs.jsx","components/withAuthRedirect/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainContentMassage\":\"Dialogs_mainContentMassage__h2rFZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__M3O2o\",\"active\":\"Dialog_active__wXU5v\"};","import styles from \"./Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet setActive = NavDate => NavDate.isActive ? styles.active : \"\";\r\n\r\nfunction Dialog(props) {\r\n    return (\r\n        <NavLink to={`/dialogs/${props.id}`} className={setActive}>\r\n            <div className={styles.dialog}>\r\n                <span></span> <img src={props.avatarCompanion} alt=\"\"/> {props.companionName}\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default Dialog;","// extracted by mini-css-extract-plugin\nexport default {\"BlockContentDialogs\":\"BlockWithDialogs_BlockContentDialogs__RPdqn\"};","import Dialog from \"./Dialog/Dialog\";\r\nimport styles from \"./BlockWithDialogs.module.css\";\r\n\r\n\r\nconst BlockWithDialogs = (props) => {\r\n    return (<div className={styles.BlockContentDialogs}>\r\n        {props.dataUsersDialogs.map(companion => (\r\n            <Dialog id={companion.id} companionName={companion.companionName}\r\n                    avatarCompanion={companion.avatarCompanion}/>\r\n        ))}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default BlockWithDialogs;","// extracted by mini-css-extract-plugin\nexport default {\"blockMassages\":\"BlockWithMassages_blockMassages__4pQBL\"};","// extracted by mini-css-extract-plugin\nexport default {\"massagesProfiles\":\"Massages_massagesProfiles__7+-d8\"};","// extracted by mini-css-extract-plugin\nexport default {\"userMassage\":\"Massage_userMassage__RvUjI\"};","import styles from \"./Massage.module.css\";\r\n\r\nconst Massage = (props) => {\r\n    return (\r\n        <div className={styles.userMassage}>\r\n            <img src={props.massage.avatar} alt=\"avatar\"/> {props.massage.massage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Massage;","// extracted by mini-css-extract-plugin\nexport default {\"writeMassage\":\"BlockTyping_writeMassage__5PI8x\",\"blockTyping\":\"BlockTyping_blockTyping__RbhzH\",\"submitMassage\":\"BlockTyping_submitMassage__wyoQr\"};","import React from \"react\";\r\nimport styles from \"./BlockTyping.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n// let textInputMassage = React.createRef();\r\n\r\nconst BlockTyping = (props) => {\r\n\r\n    const onSubmit = (dataSubmit) => {\r\n        console.log(dataSubmit)\r\n        props.addMassageActionCreator(props.userId, dataSubmit.fieldTypingMassage)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.writeMassage}>\r\n            <BlockTypingReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BlockTypingForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.writeMassage}>\r\n            <Field type={\"text\"}\r\n                   className={styles.blockTyping}\r\n                   name={\"fieldTypingMassage\"}\r\n                   placeholder={\"Start typing...\"}\r\n                   component={\"input\"}/>\r\n            <button className={styles.submitMassage}>&#10148;</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst BlockTypingReduxForm = reduxForm({\r\n    form: \"fieldTypingMassage\"\r\n})(BlockTypingForm);\r\n\r\nexport default BlockTyping;","import {addMassageActionCreator} from \"../../../../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport BlockTypingReduxForm from \"./BlockTyping\";\r\n\r\n// const BlockTypingContainer = (props) => {\r\n//\r\n//     let submitMassage = (id) => {\r\n//         let action = addMassageActionCreator(id);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//     let onChangeInput = (text) => {\r\n//         let action = changeMassageActionCreator(text);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//     return <BlockTyping addMassageActionCreator={submitMassage}\r\n//                         changeMassageActionCreator={onChangeInput}\r\n//                         NewMassageText={props.store.getState().dialogsPage.NewMassageText}\r\n//                         userId={props.userId}/>\r\n// }\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        userId: props.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMassageActionCreator: (id, NewMassageText) => {\r\n            dispatch(addMassageActionCreator(id, NewMassageText))\r\n        }\r\n    }\r\n}\r\n\r\nconst BlockTypingContainer = connect(mapStateToProps, mapDispatchToProps)(BlockTypingReduxForm);\r\nexport default BlockTypingContainer;","import styles from \"./Massages.module.css\";\r\nimport Message from \"./Massage/Massage\";\r\nimport BlockTypingContainer from \"./BlockTyping/BlockTypingContainer\";\r\n\r\nconst Massages = (props) => {\r\n\r\n    let massagesCreate = props.massages.map((massage) => (\r\n        <Message massage={massage}/>\r\n    ));\r\n    return (\r\n        <div className={styles.massagesProfiles}>\r\n            <div>\r\n                {massagesCreate}\r\n            </div>\r\n            <BlockTypingContainer userId={props.userId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Massages;","import styles from \"./BlockWithMassages.module.css\";\r\nimport Massages from \"./Massages/Massages\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\n\r\nconst BlockWithMassages = (props) => {\r\n\r\n    let massagesAdd = props.usersMassages.map(user => (\r\n        <Route path={`/${user.id}`}\r\n               element={<Massages userId={user.id} massages={user.massages}/>}/>\r\n    ));\r\n\r\n    return (<div className={styles.blockMassages}>\r\n        <Routes>\r\n            {massagesAdd}\r\n        </Routes>\r\n    </div>)\r\n}\r\n\r\nexport default BlockWithMassages;","import styles from \"./Dialogs.module.css\"\r\nimport BlockWithDialogs from \"./BlockWithDialogs/BlockWithDialogs\";\r\nimport BlockWithMassages from \"./BlockWithMassages/BlockWithMassages\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../withAuthRedirect/withAuthRedirect\";\r\nimport {connect} from \"react-redux\";\r\n\r\nfunction Dialogs(props) {\r\n    return (\r\n        <div className={styles.mainContentMassage}>\r\n            <BlockWithDialogs dataUsersDialogs={props.dataUsersDialogs}/>\r\n            <BlockWithMassages usersMassages={props.usersMassages}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dataUsersDialogs: state.dialogsPage.dataUsersDialogs,\r\n        usersMassages: state.dialogsPage.usersMassages\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, {})(Dialogs)\r\nconst withAuthRedirectDialogs = withAuthRedirect(DialogsContainer)\r\n\r\nexport default withAuthRedirectDialogs;","import {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const mapStateToProps = (state) => ({\r\n        isUserAuth: state.authUserData.isUserAuth\r\n    })\r\n    const ComponentContainer = (props) => {\r\n        if (!props.isUserAuth) return <Navigate to={\"/login\"}/>\r\n\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    const ConnectedComponentContainer = connect(mapStateToProps)(ComponentContainer);\r\n\r\n    return ConnectedComponentContainer;\r\n}"],"names":["setActive","NavDate","isActive","styles","props","to","id","className","src","avatarCompanion","alt","companionName","dataUsersDialogs","map","companion","massage","avatar","BlockTypingReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","type","name","placeholder","component","dataSubmit","console","log","addMassageActionCreator","userId","fieldTypingMassage","connect","state","dispatch","NewMassageText","massagesCreate","massages","massagesAdd","usersMassages","user","path","element","DialogsContainer","dialogsPage","withAuthRedirect","Component","isUserAuth","authUserData"],"sourceRoot":""}